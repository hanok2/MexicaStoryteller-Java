/*
 * MexicaAtomViewer.java
 *
 * Created on 20/07/2011, 07:40:25 PM
 */
package mexica.gui;

import java.util.*;
import javax.swing.AbstractListModel;
import javax.swing.DefaultComboBoxModel;
import mexica.MexicaParameters;
import mexica.MexicaRepository;
import mexica.engagement.*;
import mexica.engagement.parser.AtomParser;

/**
 *
 * @author Ivan Guerrero (UNAM, Mexico)
 */
public class MexicaAtomViewer extends javax.swing.JDialog {
    private AtomsStore atomStore;
    
    /** Creates new form MexicaAtomViewer */
    public MexicaAtomViewer(javax.swing.JFrame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        MexicaRepository.getInstance().loadData();
        //AtomParser atomsParser = new AtomParser();
        //atomsParser.initParse(MexicaParameters.ATOMS_FILE);
        //atomStore = atomsParser.getAtoms();
        atomStore = MexicaRepository.getInstance().getAtoms();
        System.out.println("Atoms: " + atomStore.getAtomCount());
        loadCells();
    }
    
    private void loadCells() {
        cbCells.setModel(new DefaultComboBoxModel(atomStore.getCells().toArray()));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCells = new javax.swing.JLabel();
        cbCells = new javax.swing.JComboBox();
        lblAtoms = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listAtoms = new javax.swing.JList();
        lblTensions = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listTensions = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listEmotions = new javax.swing.JList();
        lblNextActions = new javax.swing.JLabel();
        lblPreviousActions = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        listNextActions = new javax.swing.JList();
        jScrollPane5 = new javax.swing.JScrollPane();
        listPreviousActions = new javax.swing.JList();
        bttnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Atom Viewer");

        lblCells.setText("Available Cells:");

        cbCells.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCellsActionPerformed(evt);
            }
        });

        lblAtoms.setText("Atoms in Cell:");

        listAtoms.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listAtomsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listAtoms);

        lblTensions.setText("Atom's Tensions:");

        jScrollPane2.setViewportView(listTensions);

        jLabel1.setText("Atom's Emotions:");

        jScrollPane3.setViewportView(listEmotions);

        lblNextActions.setText("Next Actions:");

        lblPreviousActions.setText("Previous Actions:");

        jScrollPane4.setViewportView(listNextActions);

        jScrollPane5.setViewportView(listPreviousActions);

        bttnExit.setText("Exit");
        bttnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCells)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbCells, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblAtoms)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE))
                    .addComponent(bttnExit))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTensions)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblNextActions)
                                .addGap(22, 22, 22))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPreviousActions)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCells)
                    .addComponent(cbCells, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblAtoms)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTensions)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addComponent(jScrollPane1))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNextActions))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPreviousActions)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(bttnExit)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(13, 13, 13))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbCellsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCellsActionPerformed
        final List<Atom> atoms = atomStore.getCells().get(cbCells.getSelectedIndex()).getAtoms();
        
        listAtoms.setModel(new AbstractListModel() {

            @Override
            public int getSize() {
                return atoms.size();
            }

            @Override
            public Object getElementAt(int index) {
                return atoms.get(index);
            }
        });
    }//GEN-LAST:event_cbCellsActionPerformed

    private void listAtomsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listAtomsValueChanged
        List<Atom> atoms = atomStore.getCells().get(cbCells.getSelectedIndex()).getAtoms();
        int index = listAtoms.getSelectedIndex();
        if (index >= 0) {
            final Atom atom = atoms.get(index);

            listEmotions.setModel(new AbstractListModel() {

                @Override
                public int getSize() {
                    return atom.getEmotions().size();
                }

                @Override
                public Object getElementAt(int index) {
                    return atom.getEmotions().get(index);
                }
            });
            listTensions.setModel(new AbstractListModel() {

                @Override
                public int getSize() {
                    return atom.getTensions().size();
                }

                @Override
                public Object getElementAt(int index) {
                    return atom.getTensions().get(index);
                }
            });
            listNextActions.setModel(new AbstractListModel() {

                @Override
                public int getSize() {
                    return atom.getNextActions().size();
                }

                @Override
                public Object getElementAt(int index) {
                    return atom.getNextActions().get(index);
                }
            });
            listPreviousActions.setModel(new AbstractListModel() {

                @Override
                public int getSize() {
                    return atom.getPreviousActions().size();
                }

                @Override
                public Object getElementAt(int index) {
                    return atom.getPreviousActions().get(index);
                }
            });
        }
    }//GEN-LAST:event_listAtomsValueChanged

    private void bttnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnExitActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_bttnExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
            java.awt.EventQueue.invokeLater(new Runnable() {

                @Override
                public void run() {
                    MexicaAtomViewer dialog = new MexicaAtomViewer(new javax.swing.JFrame(), true);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
                }
            });
        } catch (Exception ex) {
            System.err.println(ex);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttnExit;
    private javax.swing.JComboBox cbCells;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblAtoms;
    private javax.swing.JLabel lblCells;
    private javax.swing.JLabel lblNextActions;
    private javax.swing.JLabel lblPreviousActions;
    private javax.swing.JLabel lblTensions;
    private javax.swing.JList listAtoms;
    private javax.swing.JList listEmotions;
    private javax.swing.JList listNextActions;
    private javax.swing.JList listPreviousActions;
    private javax.swing.JList listTensions;
    // End of variables declaration//GEN-END:variables
}
