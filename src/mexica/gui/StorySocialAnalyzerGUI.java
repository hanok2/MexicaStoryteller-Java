package mexica.gui;

import java.awt.event.ActionEvent;
import java.io.FileNotFoundException;
import java.io.StringReader;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JList;
import javax.swing.UnsupportedLookAndFeelException;
import mexica.CharacterName;
import mexica.MexicaParameters;
import mexica.MexicaRepository;
import mexica.core.Action;
import mexica.core.Position;
import mexica.engagement.parser.PreviousStory;
import mexica.parser.ParseException;
import mexica.parser.PreviousStories;
import mexica.social.FinalStorySocialAnalyzer;
import mexica.story.ActionInstantiated;
import mexica.story.DeadAvatarException;
import mexica.story.IStoryContextListener;
import mexica.story.Story;
import mexica.story.filter.StoryFilterException;
import mexica.tools.InvalidCharacterException;

/**
 * Class to create and analyze stories
 * @author Ivan Guerrero
 */
public class StorySocialAnalyzerGUI extends javax.swing.JDialog {
    //private PreviousStory previousStory;
    private CharacterName performer, receiver, gossip;
    private Action action;
    private ActionInstantiated instance;
    private Position initialLocation;
    private List<ActionInstantiated> finalActions;
    
    /**
     * Creates new form StorySocialAnalyzerGUI
     */
    public StorySocialAnalyzerGUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        //previousStory = new PreviousStory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listCharacters = new mexica.gui.utils.CharacterList();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtStory = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        listActions = new JList<Action>(MexicaRepository.getInstance().getActions().getActionList().toArray(new Action[0]));
        lblCharacters = new javax.swing.JLabel();
        lblStory = new javax.swing.JLabel();
        lblActions = new javax.swing.JLabel();
        bttnReset = new javax.swing.JButton();
        bttnAnalyze = new javax.swing.JButton();
        listLocations = new mexica.gui.utils.LocationsList();
        lblLocation = new javax.swing.JLabel();
        bttnResetAction = new javax.swing.JButton();
        bttnViewLog = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuStory = new javax.swing.JMenu();
        storyTextMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Stories' Social Analyzer");

        listCharacters.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                listCharactersKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(listCharacters);

        txtStory.setColumns(20);
        txtStory.setRows(5);
        jScrollPane2.setViewportView(txtStory);

        listActions.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                listActionsKeyTyped(evt);
            }
        });
        jScrollPane3.setViewportView(listActions);

        lblCharacters.setText("Characters");

        lblStory.setText("Story");

        lblActions.setText("Actions");

        bttnReset.setText("Reset");
        bttnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnResetActionPerformed(evt);
            }
        });

        bttnAnalyze.setText("Analyze");
        bttnAnalyze.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnAnalyzeActionPerformed(evt);
            }
        });

        listLocations.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listLocationsActionPerformed(evt);
            }
        });

        lblLocation.setText("Default location");

        bttnResetAction.setText("Reset action");
        bttnResetAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnResetActionActionPerformed(evt);
            }
        });

        bttnViewLog.setText("View details");
        bttnViewLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnViewLogActionPerformed(evt);
            }
        });

        menuStory.setText("Story");

        storyTextMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        storyTextMenu.setText("Retrieve story text");
        storyTextMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storyTextMenuActionPerformed(evt);
            }
        });
        menuStory.add(storyTextMenu);

        jMenuBar1.add(menuStory);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCharacters)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblStory)
                        .addGap(333, 333, 333)
                        .addComponent(lblActions))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(listLocations, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblLocation))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(bttnReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(bttnAnalyze, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(bttnResetAction, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(bttnViewLog, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCharacters)
                    .addComponent(lblStory)
                    .addComponent(lblActions))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bttnReset)
                        .addComponent(bttnResetAction))
                    .addComponent(lblLocation))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bttnAnalyze)
                    .addComponent(listLocations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttnViewLog))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listCharactersKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_listCharactersKeyTyped
        if (evt.getKeyChar() == '\n' && listCharacters.getSelectedIndex() >= 0) {
            CharacterName selection = listCharacters.getSelectedValue();
            txtStory.append(selection.name());
            //Performer
            //If the character is the action performer, select an action
            if (performer == null) {
                performer = selection;
                txtStory.append(" ");
                listActions.requestFocus(true);
            }
            //Receiver
            //If the character is the action receiver, move to the next action and save the current action
            else if (receiver == null) {
                receiver = selection;
                addActionToStory();
            }
            //Gossip
            //If the character is the gossip, select an action
        }
    }//GEN-LAST:event_listCharactersKeyTyped

    private void bttnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnResetActionPerformed
        //previousStory = new PreviousStory();
        txtStory.setText("");
    }//GEN-LAST:event_bttnResetActionPerformed

    private void listActionsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_listActionsKeyTyped
        if (evt.getKeyChar() == '\n' && listActions.getSelectedIndex() >= 0) {
            Action act = (Action)listActions.getSelectedValue();
            txtStory.append(act.getActionName());
            //If the action is a single character action, save the current action
            if (act.getNoCharacters() == 1) {
                action = act;
                addActionToStory();
                listCharacters.requestFocus(true);
            }
            //If the action is a double character action, select the receiver
            else if (act.getNoCharacters() == 2) {
                action = act;
                txtStory.append(" ");
                listCharacters.requestFocus(true);
            }
            //If the action is a composite action
        }
    }//GEN-LAST:event_listActionsKeyTyped

    private void bttnAnalyzeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnAnalyzeActionPerformed
        Story story = parseStory(evt);
        txtStory.setText("");
        FinalStorySocialAnalyzer socialAnalyzer = new FinalStorySocialAnalyzer(story);
        finalActions = socialAnalyzer.analyze();
        for (ActionInstantiated ins : finalActions) {
            txtStory.append(ins.toString() + "\n");
        }
    }//GEN-LAST:event_bttnAnalyzeActionPerformed

    private void listLocationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listLocationsActionPerformed
        //previousStory.setInitialLocation((Position)listLocations.getSelectedItem());
        initialLocation = (Position)listLocations.getSelectedItem();
    }//GEN-LAST:event_listLocationsActionPerformed

    private void storyTextMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storyTextMenuActionPerformed
        if (finalActions != null) {
            StoryTextViewer viewer = new StoryTextViewer(null, true, finalActions);
            viewer.setVisible(true);
        }
    }//GEN-LAST:event_storyTextMenuActionPerformed

    private void bttnResetActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnResetActionActionPerformed
        resetAction();
    }//GEN-LAST:event_bttnResetActionActionPerformed

    private void bttnViewLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnViewLogActionPerformed
        Story story = parseStory(null);
        MexicaStoryGenerator generator = new MexicaStoryGenerator(story);
        generator.setLocationByPlatform(true);
        story.notifyListeners(IStoryContextListener.ListType.Story);
        story.notifyListeners(IStoryContextListener.ListType.Actions);
        generator.setVisible(true);
    }//GEN-LAST:event_bttnViewLogActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(StorySocialAnalyzerGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MexicaRepository.getInstance().loadData();
                
                StorySocialAnalyzerGUI dialog = new StorySocialAnalyzerGUI(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttnAnalyze;
    private javax.swing.JButton bttnReset;
    private javax.swing.JButton bttnResetAction;
    private javax.swing.JButton bttnViewLog;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblActions;
    private javax.swing.JLabel lblCharacters;
    private javax.swing.JLabel lblLocation;
    private javax.swing.JLabel lblStory;
    private javax.swing.JList listActions;
    private mexica.gui.utils.CharacterList listCharacters;
    private mexica.gui.utils.LocationsList listLocations;
    private javax.swing.JMenu menuStory;
    private javax.swing.JMenuItem storyTextMenu;
    private javax.swing.JTextArea txtStory;
    // End of variables declaration//GEN-END:variables

    private void addActionToStory() {
//        if (action.getNoCharacters() == 1)
//            instance = new ActionInstantiated(action, performer);
//        else if (action.getNoCharacters() == 2)
//            instance = new ActionInstantiated(action, performer, receiver);
//        
//        previousStory.addAction(instance);
        txtStory.append("\n");
        resetAction();
    }

    private void resetAction() {
        performer = null;
        receiver = null;
        gossip = null;
        action = null;
        instance = null;
    }

    private Story parseStory(ActionEvent evt) {
        listLocationsActionPerformed(evt);
        PreviousStories parser = null;
        String headerText = "Sto; 1\nSTART\n";
        String footerText = "\nEND\n";
        boolean illogicalActions = MexicaParameters.ENABLE_ILLOGICAL_ACTIONS;
        try {
            MexicaParameters.ENABLE_ILLOGICAL_ACTIONS = true;
            parser = new PreviousStories(MexicaRepository.getInstance().getActions());
            parser.ReInit(new StringReader(headerText + txtStory.getText() + footerText));
            parser.Start();
        } catch (FileNotFoundException | ParseException ex) {
            Logger.getGlobal().log(Level.SEVERE, "Error analyzing story: {0}", ex.getMessage());
        } finally {
            MexicaParameters.ENABLE_ILLOGICAL_ACTIONS = illogicalActions;
        }
        //parser.parseText(txtStory.getText());
        PreviousStory previousStory = parser.getStories().get(0);
        Story story = new Story();
        story.setDefaultPosition(initialLocation);
        for (ActionInstantiated ins : previousStory.getActions()) {
            try {
                story.addAction(ins.getAction(), ins.getCharactersList().toArray(new CharacterName[0]));
            } catch (InvalidCharacterException | DeadAvatarException | StoryFilterException ex) {
                Logger.getGlobal().log(Level.SEVERE, null, ex);
            }
        }
        return story;
    }
}
