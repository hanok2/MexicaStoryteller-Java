package mexica.action.gui;

import java.awt.Component;
import mexica.core.*;

/**
 *
 * @author ivang_000
 */
public class ConditionManagerGUI extends javax.swing.JDialog {
    private Condition condition;
    /**
     * Creates new form ConditionManagerGUI
     */
    public ConditionManagerGUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gpType = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        rbEmotion = new javax.swing.JRadioButton();
        rbTension = new javax.swing.JRadioButton();
        rbLocation = new javax.swing.JRadioButton();
        panelCondition = new javax.swing.JPanel();
        bttnSave = new javax.swing.JButton();
        bttnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Condition Manager");

        jLabel1.setText("Type:");

        gpType.add(rbEmotion);
        rbEmotion.setText("Emotion");
        rbEmotion.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rbEmotionStateChanged(evt);
            }
        });

        gpType.add(rbTension);
        rbTension.setText("Tension");
        rbTension.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rbTensionStateChanged(evt);
            }
        });

        gpType.add(rbLocation);
        rbLocation.setText("Location");

        panelCondition.setLayout(new java.awt.GridLayout(1, 1));

        bttnSave.setText("Save");
        bttnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnSaveActionPerformed(evt);
            }
        });

        bttnExit.setText("Exit");
        bttnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(panelCondition, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(32, 32, 32)
                                .addComponent(rbEmotion)
                                .addGap(18, 18, 18)
                                .addComponent(rbTension)
                                .addGap(18, 18, 18)
                                .addComponent(rbLocation)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bttnSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bttnExit)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(rbEmotion)
                    .addComponent(rbTension)
                    .addComponent(rbLocation))
                .addGap(18, 18, 18)
                .addComponent(panelCondition, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bttnSave)
                    .addComponent(bttnExit))
                .addGap(6, 6, 6))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbEmotionStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rbEmotionStateChanged
        if (rbEmotion.isSelected()) {
            panelCondition.removeAll();
            EmotionPanel emotionPanel = new EmotionPanel();
            emotionPanel.setCondition(condition);
            panelCondition.add(emotionPanel);
            panelCondition.validate();
        }
    }//GEN-LAST:event_rbEmotionStateChanged

    private void bttnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnSaveActionPerformed
        Component[] components = panelCondition.getComponents();
        Component component = components[0];
        if (component instanceof EmotionPanel) {
            EmotionPanel p = (EmotionPanel)component;
            condition = p.getCondition();
        }
        else if (component instanceof TensionPanel) {
            TensionPanel t = (TensionPanel)component;
            condition = t.getCondition();
        }
        dispose();
    }//GEN-LAST:event_bttnSaveActionPerformed

    private void bttnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnExitActionPerformed
        condition = null;
        dispose();
    }//GEN-LAST:event_bttnExitActionPerformed

    private void rbTensionStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rbTensionStateChanged
        if (rbTension.isSelected()) {
            panelCondition.removeAll();
            TensionPanel tensionPanel = new TensionPanel();
            tensionPanel.setCondition(condition);
            panelCondition.add(tensionPanel);
            panelCondition.validate();
        }
    }//GEN-LAST:event_rbTensionStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConditionManagerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConditionManagerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConditionManagerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConditionManagerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ConditionManagerGUI dialog = new ConditionManagerGUI(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttnExit;
    private javax.swing.JButton bttnSave;
    private javax.swing.ButtonGroup gpType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel panelCondition;
    private javax.swing.JRadioButton rbEmotion;
    private javax.swing.JRadioButton rbLocation;
    private javax.swing.JRadioButton rbTension;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the condition
     */
    public Condition getCondition() {
        return condition;
    }

    /**
     * @param condition the condition to set
     */
    public void setCondition(Condition condition) {
        this.condition = condition;
        switch (condition.getConditionType()) {
            case Emotion:
                rbEmotion.setSelected(true);
                break;
            case Tension:
                rbTension.setSelected(true);
                break;
        }
    }
}